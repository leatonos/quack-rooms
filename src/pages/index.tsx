import Head from 'next/head'
import Image from 'next/image'
import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'
import { FormEvent, useEffect, useState } from 'react'
import RoomListItem from './components/roomListItem'
import { DuckRoom } from '@/types'
import { useRouter } from 'next/router'

const inter = Inter({ subsets: ['latin'] })



export default function Home() {

  const router = useRouter()

  const [rooms,setRooms] = useState<DuckRoom[]>([])
  const [showRoomCreator,setRoomCreator] = useState<boolean>(false)

  useEffect(()=>{

    const getRooms = async () => {
      const response = await fetch('api/rooms')
      const result:DuckRoom[] = await response.json() 
      setRooms(result)
    }
    getRooms()
  },[])

  function RoomCreator(){

    const createRoom =async (e:FormEvent) => {

      e.preventDefault()

      const newRoomName:string = (document.getElementById('newRoomName') as HTMLInputElement).value
      const newroomLimit = (document.getElementById('roomLimit') as HTMLInputElement).value
      
      const dataToSend = {roomName:newRoomName,roomLimit:parseInt(newroomLimit)}

      const requestOptions = {
        method: 'POST',
        body: JSON.stringify(dataToSend)
      };

      type ExpectedResult = {
        newRoomId:string
      }
      
      fetch("api/createroom", requestOptions)
        .then(response => response.json())
        .then((result:ExpectedResult) => router.push(`quackroom/${result.newRoomId}`))
        .catch(error => console.log('error', error));
    }
   
    if(!showRoomCreator){
      return
    }
    return(
      <div className='fullScreenCover'>
        <div className={styles.mainContainer}>
          <div className={styles.mainContainerHeader}>
            <h2>Create Room</h2>
            <form onSubmit={createRoom}>
              <div>
                <label htmlFor='newRoomName'>Room Name:</label>
                <input type='text' id='newRoomName' defaultValue={'Quack room'}></input>
              </div>              
              <div>
                <label htmlFor='roomLimit'>Room Limit</label>
                <input type='number' id='roomLimit' max={12} min={1} defaultValue={4}></input>
              </div>
              <div>
                <button type='submit'>Create Room</button>
                <button type='button' onClick={()=>setRoomCreator(false)}>Cancel</button>
              </div>              
            </form>
          </div>
        </div>
      </div>
    )
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
     
      <RoomCreator/>
     <main>
      <div className={styles.mainContainer}>
        <h1>Welcome to the Quackrooms</h1>
        <button onClick={()=>setRoomCreator(true)}> Create Room </button>
        <div className={styles.roomListContainer}>
        {rooms.map((room)=>{
          return <RoomListItem key={room._id} _id={room._id} roomName={room.roomName} ducks={room.ducks} limit={room.limit} />
        })}
        </div>
      </div>
     </main>
    </>
  )
}
