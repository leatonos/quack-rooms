import Head from 'next/head'
import Image from 'next/image'
import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'
import { FormEvent, useEffect, useState } from 'react'
import { io } from 'socket.io-client'
import { useRouter } from 'next/router'
import { DuckMessage } from '@/types'
import DuckImage from '../components/duckImage'

const inter = Inter({ subsets: ['latin'] })

export default function Home() {

  const router = useRouter()
  const roomId = router.query.id as string
  const [messages,setMessages] = useState<DuckMessage[]>([])
  const [duckColor,setDuckColor] = useState<string>('#e9ff70')
  const socket = io('https://boulder-secret-blossom.glitch.me/')

  useEffect(()=>{

    if(!router.query.id){
        return
    }
    socket.connect();

    socket.on('connect',()=>{
      console.log('connected')
    })

    socket.on(`message room:${roomId}`,(msg:DuckMessage)=>{
      const messageList = [...messages]
      console.log(messageList)
      messageList.push(msg)
      setMessages(messageList)
    })

    socket.on(`changeDuck room:${roomId}`,(duck)=>{
     console.log('A duck changed color or name')
    })

    return () =>{
      socket.disconnect();
    }

    
  },[router,messages])


  const serverChangeDuckColor=async (roomCode:string,duckColor:string,duckNumber:number) => {
    socket.emit('changeDuck')
  }  

  const sendMessage = async (event:FormEvent) => {
    event.preventDefault()
    const message = (document.getElementById('input') as HTMLInputElement).value 
    
    const messageObj:DuckMessage = {
      text: message,
      sender:'Duck',
      roomId:roomId
    }

    socket.emit('message', messageObj);
    (document.getElementById('input') as HTMLInputElement).value = '' 

  }


  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
     <main>
     <div className={styles.duckEditorContainer}>
      <div className={styles.duckImageContainer}>
        <DuckImage color={duckColor} duckName={''}/>
      </div>
      <div className={styles.duckEditor}>
      <h3>Your Duck</h3>
        <label htmlFor="duckColor">Duck color </label>
        <input type="color" id="duckColor" onChange={(e)=>setDuckColor(e.target.value)} onBlur={()=>serverChangeDuckColor(roomId,duckColor,0)} defaultValue={duckColor}></input>
        <label htmlFor="duckName">Duck Name: </label>
        <input type="text" id="duckName" defaultValue={'Duck'}></input>
      </div>
     </div>
     <ul id="messages">
      {messages.map((message,index)=>{
        return (
          <li key={index}>{message.sender}: {message.text}</li>
        )
      })}
     </ul>
      <form id="form" action="" onSubmit={(e)=>sendMessage(e)}>
        <input id="input" autoComplete="off" /><button type='submit'>Send</button>
      </form>
     </main>
    </>
  )
}
